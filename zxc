 -- Gui to Lua
-- Version: 3.2

-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Frame_2 = Instance.new("Frame")
local Frame_3 = Instance.new("Frame")
local watermark = Instance.new("TextLabel")
local invite = Instance.new("TextLabel")
local Version = Instance.new("TextLabel")
local Time = Instance.new("TextLabel")
local bar = Instance.new("Frame")
local bar_2 = Instance.new("Frame")
local Tab1 = Instance.new("TextButton")
local Settings = Instance.new("TextButton")
local bar_4 = Instance.new("Frame")
local TabFrame1 = Instance.new("Frame")
local TabFrame2 = Instance.new("Frame")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.309734523, 0, 0.307788938, 0)
Frame.Size = UDim2.new(0, 473, 0, 305)

Frame_2.Parent = Frame
Frame_2.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0, 0, 0.954098344, 0)
Frame_2.Size = UDim2.new(0, 473, 0, 14)

Frame_3.Parent = Frame
Frame_3.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
Frame_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_3.BorderSizePixel = 0
Frame_3.Size = UDim2.new(0, 473, 0, 18)

watermark.Name = "watermark"
watermark.Parent = Frame_3
watermark.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
watermark.BackgroundTransparency = 1.000
watermark.BorderColor3 = Color3.fromRGB(0, 0, 0)
watermark.BorderSizePixel = 0
watermark.Position = UDim2.new(0.0126849897, 0, 0.166666672, 0)
watermark.Size = UDim2.new(0, 46, 0, 12)
watermark.Font = Enum.Font.SourceSans
watermark.Text = "AirFlow "
watermark.TextColor3 = Color3.fromRGB(198, 198, 198)
watermark.TextSize = 14.000
watermark.TextStrokeTransparency = 0.500

invite.Name = "invite"
invite.Parent = Frame_3
invite.BackgroundColor3 = Color3.fromRGB(130, 130, 130)
invite.BackgroundTransparency = 1.000
invite.BorderColor3 = Color3.fromRGB(0, 0, 0)
invite.BorderSizePixel = 0
invite.Position = UDim2.new(0.892177582, 0, 0.166666672, 0)
invite.Size = UDim2.new(0, 26, 0, 12)
invite.Font = Enum.Font.SourceSans
invite.Text = "dsc.gg/flowx"
invite.TextColor3 = Color3.fromRGB(112, 131, 181)
invite.TextSize = 14.000
invite.TextStrokeTransparency = 0.500

Version.Name = "Version"
Version.Parent = Frame_3
Version.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Version.BackgroundTransparency = 1.000
Version.BorderColor3 = Color3.fromRGB(0, 0, 0)
Version.BorderSizePixel = 0
Version.Position = UDim2.new(0.911205053, 0, 16.2777786, 0)
Version.Size = UDim2.new(0, 42, 0, 10)
Version.Font = Enum.Font.SourceSans
Version.Text = "V1.0"
Version.TextColor3 = Color3.fromRGB(148, 175, 240)
Version.TextSize = 14.000
Version.TextStrokeTransparency = 0.500
Version.TextTransparency = 0.100
Version.TextWrapped = true

Time.Name = "Time"
Time.Parent = Frame_3
Time.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Time.BackgroundTransparency = 1.000
Time.BorderColor3 = Color3.fromRGB(0, 0, 0)
Time.BorderSizePixel = 0
Time.Position = UDim2.new(0.471, 0, 16.278, 0)
Time.Size = UDim2.new(0, -44, 0, 10)
Time.Font = Enum.Font.SourceSans
Time.TextColor3 = Color3.fromRGB(255, 255, 255)
Time.TextSize = 13.000
Time.TextStrokeTransparency = 0.500
Time.TextTransparency = 0.200

local function updateTime()
    local function formatTime(hour, minute)
        local period = hour >= 12 and "PM" or "AM"
        hour = hour % 12
        if hour == 0 then hour = 12 end
        return string.format("Free Version                                                                                                                                                  %d:%02d %s", hour, minute, period)
    end

    game:GetService("RunService").RenderStepped:Connect(function()
        local currentTime = os.date("*t")
        Time.Text = formatTime(currentTime.hour, currentTime.min)
    end)
end

-- Start the time update
updateTime()

bar.Name = "bar"
bar.Parent = Frame_3
bar.BackgroundColor3 = Color3.fromRGB(158, 185, 255)
bar.BackgroundTransparency = 0.500
bar.BorderColor3 = Color3.fromRGB(0, 0, 0)
bar.BorderSizePixel = 0
bar.Position = UDim2.new(0, 0, 0.944444418, 0)
bar.Size = UDim2.new(0, 473, 0, 1)

bar_2.Name = "bar"
bar_2.Parent = Frame_3
bar_2.BackgroundColor3 = Color3.fromRGB(158, 185, 255)
bar_2.BackgroundTransparency = 0.500
bar_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
bar_2.BorderSizePixel = 0
bar_2.Position = UDim2.new(0, 0, 16.166666, 0)
bar_2.Size = UDim2.new(0, 473, 0, -1)

Tab1.Name = "Tab1"
Tab1.Parent = Frame_3
Tab1.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
Tab1.BackgroundTransparency = 1.000
Tab1.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab1.BorderSizePixel = 0
Tab1.Position = UDim2.new(0.217758983, 0, 0, 0)
Tab1.Size = UDim2.new(0, 42, 0, 17)
Tab1.Font = Enum.Font.SourceSans
Tab1.Text = ""
Tab1.TextColor3 = Color3.fromRGB(255, 255, 255)
Tab1.TextScaled = true
Tab1.TextSize = 14.000
Tab1.TextWrapped = true

Settings.Name = "Settings"
Settings.Parent = Frame_3
Settings.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
Settings.BackgroundTransparency = 1.000
Settings.BorderColor3 = Color3.fromRGB(0, 0, 0)
Settings.BorderSizePixel = 0
Settings.Position = UDim2.new(0.822410166, 0, 16.2777786, 0)
Settings.Size = UDim2.new(0, 42, 0, 12)
Settings.Font = Enum.Font.SourceSans
Settings.Text = "⚙️"
Settings.TextColor3 = Color3.fromRGB(255, 255, 255)
Settings.TextScaled = true
Settings.TextSize = 14.000
Settings.TextWrapped = true

bar_4.Name = "bar"
bar_4.Parent = Frame_3
bar_4.BackgroundColor3 = Color3.fromRGB(158, 185, 255)
bar_4.BackgroundTransparency = 0.500
bar_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
bar_4.BorderSizePixel = 0
bar_4.Position = UDim2.new(0.109936573, 0, 0.166666672, 0)
bar_4.Size = UDim2.new(0, 1, 0, 14)

TabFrame1.Name = "Tab Frame 1"
TabFrame1.Parent = Frame
TabFrame1.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TabFrame1.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabFrame1.BorderSizePixel = 0
TabFrame1.Position = UDim2.new(0.0126849897, 0, 0.0885245875, 0)
TabFrame1.Size = UDim2.new(0, 223, 0, 251)

TabFrame2.Name = "Tab Frame 2"
TabFrame2.Parent = Frame
TabFrame2.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TabFrame2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabFrame2.BorderSizePixel = 0
TabFrame2.Position = UDim2.new(0.515856266, 0, 0.0885245875, 0)
TabFrame2.Size = UDim2.new(0, 223, 0, 251)

-- First create the library table
local library = {
    flags = {},
    toggled = false,
    currentTab = nil,
    tabs = {},
    tabContainers = {}
}

-- Add to the library table at the top
library.settings = {
    menuKey = Enum.KeyCode.RightShift,
    accentColor = Color3.fromRGB(158, 185, 255),
    backgroundColor = Color3.fromRGB(18, 18, 18)
}
local function createGradientAnimation(textLabel)
    local startColor = Color3.fromRGB(112, 131, 181)
    local endColor = Color3.fromRGB(188, 188, 188)
    local duration = 3

    local function lerpColor(color1, color2, alpha)
        return Color3.new(
            color1.R + (color2.R - color1.R) * alpha,
            color1.G + (color2.G - color1.G) * alpha,
            color1.B + (color2.B - color1.B) * alpha
        )
    end

    local elapsedTime = 0
    game:GetService("RunService").RenderStepped:Connect(function(delta)
        elapsedTime = elapsedTime + delta
        local alpha = math.abs(math.sin((elapsedTime / duration) * math.pi))
        textLabel.TextColor3 = lerpColor(startColor, endColor, alpha)
    end)
end

-- Start the animation
createGradientAnimation(invite)

-- Add these variables at the top of the script
local lastPosition = nil -- Store last menu position
local isTweening = false -- Prevent multiple animations

-- Add these functions at the top of the script after the services
local function createTween(instance, properties, duration, easingStyle, easingDirection)
    return TweenService:Create(
        instance,
        TweenInfo.new(
            duration or 0.2,
            easingStyle or Enum.EasingStyle.Quart,
            easingDirection or Enum.EasingDirection.Out
        ),
        properties
    )
end

-- Update the menu toggle functionality
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == library.settings.menuKey and not isTweening then
        isTweening = true
        library.toggled = not library.toggled
        
        if library.toggled then
            Frame.Visible = true
            Frame.BackgroundTransparency = 1
            
            -- Simple fade in
            local fadeIn = createTween(Frame, {
                BackgroundTransparency = 0
            }, 0.2)
            
            fadeIn:Play()
        else
            -- Simple fade out
            local fadeOut = createTween(Frame, {
                BackgroundTransparency = 1
            }, 0.2)
            
            fadeOut:Play()
            fadeOut.Completed:Connect(function()
                Frame.Visible = false
            end)
        end
        
        wait(0.2)
        isTweening = false
    end
end)

-- Update the dragging functionality with smooth movement
local dragging = false
local dragInput
local dragStart
local startPos

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        createTween(Frame, {
            Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        }, 0.1, Enum.EasingStyle.Sine):Play()
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Handle tab switching
TabFrame1.Visible = false
TabFrame2.Visible = false

Tab1.MouseButton1Click:Connect(function()
    TabFrame1.Visible = true
    TabFrame2.Visible = true
end)

-- Create library functions
function library:CreateButton(text, parent, callback)
    local buttonContainer = Instance.new("Frame")
    buttonContainer.Name = text .. "Container"
    buttonContainer.Parent = parent
    buttonContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    buttonContainer.BorderColor3 = Color3.fromRGB(40, 40, 40)
    buttonContainer.Size = UDim2.new(0.95, 0, 0, 25)
    
    local button = Instance.new("TextButton")
    button.Name = text
    button.Parent = buttonContainer
    button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    button.BorderColor3 = Color3.fromRGB(60, 60, 60)
    button.Position = UDim2.new(0, 4, 0.5, -10)
    button.Size = UDim2.new(1, -8, 0, 20)
    button.Font = Enum.Font.SourceSans
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 14
    button.AutoButtonColor = false
    
    -- Add slight rounding
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 2)
    UICorner.Parent = button
    
    -- Hover and Click Effects
    button.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(40, 40, 40),
            TextColor3 = Color3.fromRGB(158, 185, 255)
        }):Play()
        
        -- Add subtle scale effect
        game:GetService("TweenService"):Create(button, TweenInfo.new(0.2), {
            Size = UDim2.new(1, -6, 0, 22)
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(30, 30, 30),
            TextColor3 = Color3.fromRGB(255, 255, 255),
            Size = UDim2.new(1, -8, 0, 20)
        }):Play()
    end)
    
    button.MouseButton1Down:Connect(function()
        game:GetService("TweenService"):Create(button, TweenInfo.new(0.1), {
            BackgroundColor3 = Color3.fromRGB(158, 185, 255)
        }):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        game:GetService("TweenService"):Create(button, TweenInfo.new(0.1), {
            BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        }):Play()
        callback()
    end)
    
    return buttonContainer
end

function library:CreateToggle(text, parent, flag, callback)
    local toggle = Instance.new("Frame")
    toggle.Name = text
    toggle.Parent = parent
    toggle.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    toggle.BorderColor3 = Color3.fromRGB(40, 40, 40)
    toggle.Size = UDim2.new(0.95, 0, 0, 25)
    
    local toggleButton = Instance.new("Frame")
    toggleButton.Name = "ToggleButton"
    toggleButton.Parent = toggle
    toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    toggleButton.Position = UDim2.new(0.95, -16, 0.5, -6)
    toggleButton.Size = UDim2.new(0, 12, 0, 12)
    toggleButton.BorderSizePixel = 0
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 2)
    UICorner.Parent = toggleButton
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Parent = toggle
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 8, 0, 0)
    label.Size = UDim2.new(0.9, -15, 1, 0)
    label.Font = Enum.Font.SourceSans
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local button = Instance.new("TextButton")
    button.Name = "Button"
    button.Parent = toggle
    button.BackgroundTransparency = 1
    button.Size = UDim2.new(1, 0, 1, 0)
    button.Text = ""
    
    library.flags[flag] = false
    
    local function updateToggle()
        local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        
        if library.flags[flag] then
            game:GetService("TweenService"):Create(toggleButton, tweenInfo, {
                BackgroundColor3 = Color3.fromRGB(158, 185, 255) -- Menu's accent color
            }):Play()
        else
            game:GetService("TweenService"):Create(toggleButton, tweenInfo, {
                BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            }):Play()
        end
    end
    
    button.MouseButton1Click:Connect(function()
        library.flags[flag] = not library.flags[flag]
        updateToggle()
        callback(library.flags[flag])
    end)
    
    -- Hover Effect
    button.MouseEnter:Connect(function()
        if not library.flags[flag] then
            game:GetService("TweenService"):Create(toggleButton, TweenInfo.new(0.2), {
                BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            }):Play()
            game:GetService("TweenService"):Create(label, TweenInfo.new(0.2), {
                TextColor3 = Color3.fromRGB(158, 185, 255)
            }):Play()
        end
    end)
    
    button.MouseLeave:Connect(function()
        if not library.flags[flag] then
            game:GetService("TweenService"):Create(toggleButton, TweenInfo.new(0.2), {
                BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            }):Play()
            game:GetService("TweenService"):Create(label, TweenInfo.new(0.2), {
                TextColor3 = Color3.fromRGB(255, 255, 255)
            }):Play()
        end
    end)
    
    return toggle
end

function library:CreateSection(name, parent)
    -- Create a ScrollingFrame as the main container
    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Name = name .. "ScrollingFrame"
    scrollingFrame.Parent = parent
    scrollingFrame.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
    scrollingFrame.BorderSizePixel = 0
    scrollingFrame.Position = UDim2.new(0.02, 0, 0, 5)
    scrollingFrame.Size = UDim2.new(0.96, 0, 0.98, 0)
    scrollingFrame.ScrollBarThickness = 2
    scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(158, 185, 255)
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Will auto-update
    
    -- Add smooth scrolling
    local function smoothScroll(input)
        local scrollSpeed = 0.1
        local targetPosition = scrollingFrame.CanvasPosition
        
        if input.UserInputType == Enum.UserInputType.MouseWheel then
            if input.Position.Z > 0 then -- Scrolling up
                targetPosition = Vector2.new(0, math.max(0, scrollingFrame.CanvasPosition.Y - 40))
            else -- Scrolling down
                targetPosition = Vector2.new(0, math.min(
                    scrollingFrame.CanvasSize.Y.Offset - scrollingFrame.AbsoluteSize.Y,
                    scrollingFrame.CanvasPosition.Y + 40
                ))
            end
            
            -- Smooth scrolling animation
            game:GetService("TweenService"):Create(
                scrollingFrame, 
                TweenInfo.new(scrollSpeed, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {CanvasPosition = targetPosition}
            ):Play()
        end
    end
    
    scrollingFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseWheel then
            smoothScroll(input)
        end
    end)
    
    -- Create container for elements
    local container = Instance.new("Frame")
    container.Name = "Container"
    container.Parent = scrollingFrame
    container.BackgroundTransparency = 1
    container.Position = UDim2.new(0, 0, 0, 0)
    container.Size = UDim2.new(1, 0, 1, 0)
    
    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Parent = container
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5)
    UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    
    -- Auto-size function
    local function updateSize()
        local contentSize = UIListLayout.AbsoluteContentSize
        container.Size = UDim2.new(1, 0, 0, contentSize.Y)
        scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, contentSize.Y)
    end
    
    UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateSize)
    
    -- Add padding at the top and bottom
    local UIPadding = Instance.new("UIPadding")
    UIPadding.Parent = container
    UIPadding.PaddingTop = UDim.new(0, 5)
    UIPadding.PaddingBottom = UDim.new(0, 5)
    
    -- Add hover effect for scrollbar
    local scrollBarVisible = false
    
    scrollingFrame.MouseEnter:Connect(function()
        if scrollingFrame.CanvasSize.Y.Offset > scrollingFrame.AbsoluteSize.Y then
            game:GetService("TweenService"):Create(scrollingFrame, TweenInfo.new(0.2), {
                ScrollBarImageTransparency = 0
            }):Play()
        end
    end)
    
    scrollingFrame.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(scrollingFrame, TweenInfo.new(0.2), {
            ScrollBarImageTransparency = 0.5
        }):Play()
    end)
    
    -- Initially set scrollbar transparency
    scrollingFrame.ScrollBarImageTransparency = 0.5
    
    return container
end

function library:CreateSlider(text, parent, flag, min, max, default, increment, callback)
    local sliderContainer = Instance.new("Frame")
    sliderContainer.Name = text
    sliderContainer.Parent = parent
    sliderContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    sliderContainer.BorderColor3 = Color3.fromRGB(40, 40, 40)
    sliderContainer.Size = UDim2.new(0.95, 0, 0, 35)
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = sliderContainer
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Parent = sliderContainer
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 8, 0, 0)
    label.Size = UDim2.new(0.7, -8, 0, 25)
    label.Font = Enum.Font.SourceSans
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local valueLabel = Instance.new("TextLabel")
    valueLabel.Name = "Value"
    valueLabel.Parent = sliderContainer
    valueLabel.BackgroundTransparency = 1
    valueLabel.Position = UDim2.new(0.7, 0, 0, 0)
    valueLabel.Size = UDim2.new(0.3, -8, 0, 25)
    valueLabel.Font = Enum.Font.SourceSans
    valueLabel.Text = tostring(default)
    valueLabel.TextColor3 = Color3.fromRGB(158, 185, 255)
    valueLabel.TextSize = 14
    valueLabel.TextXAlignment = Enum.TextXAlignment.Right
    
    local sliderBar = Instance.new("Frame")
    sliderBar.Name = "SliderBar"
    sliderBar.Parent = sliderContainer
    sliderBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    sliderBar.BorderSizePixel = 0
    sliderBar.Position = UDim2.new(0, 8, 0, 25)
    sliderBar.Size = UDim2.new(1, -16, 0, 4)
    
    local UICorner_2 = Instance.new("UICorner")
    UICorner_2.CornerRadius = UDim.new(1, 0)
    UICorner_2.Parent = sliderBar
    
    local sliderFill = Instance.new("Frame")
    sliderFill.Name = "SliderFill"
    sliderFill.Parent = sliderBar
    sliderFill.BackgroundColor3 = Color3.fromRGB(158, 185, 255)
    sliderFill.BorderSizePixel = 0
    sliderFill.Size = UDim2.new(0, 0, 1, 0)
    
    local UICorner_3 = Instance.new("UICorner")
    UICorner_3.CornerRadius = UDim.new(1, 0)
    UICorner_3.Parent = sliderFill
    
    local sliderButton = Instance.new("TextButton")
    sliderButton.Name = "SliderButton"
    sliderButton.Parent = sliderContainer
    sliderButton.BackgroundTransparency = 1
    sliderButton.Size = UDim2.new(1, 0, 1, 0)
    sliderButton.Text = ""
    
    -- Slider functionality
    local function updateSlider(input)
        local pos = UDim2.new(math.clamp((input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1), 0, 1, 0)
        
        -- Calculate value with increment
        local raw = min + (max - min) * pos.X.Scale
        local value = math.floor(raw / increment) * increment
        value = math.clamp(value, min, max)
        
        -- Calculate the actual position based on the incremented value
        local adjustedScale = (value - min) / (max - min)
        local adjustedPos = UDim2.new(adjustedScale, 0, 1, 0)
        
        -- Smooth tween for the fill
        game:GetService("TweenService"):Create(sliderFill, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {
            Size = adjustedPos
        }):Play()
        
        valueLabel.Text = tostring(value)
        library.flags[flag] = value
        callback(value)
    end
    
    -- Set default value
    library.flags[flag] = default
    local defaultScale = (default - min) / (max - min)
    sliderFill.Size = UDim2.new(defaultScale, 0, 1, 0)
    
    local sliding = false
    
    sliderButton.MouseButton1Down:Connect(function()
        sliding = true
        updateSlider({Position = UserInputService:GetMouseLocation()})
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            sliding = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and sliding then
            updateSlider({Position = UserInputService:GetMouseLocation()})
        end
    end)
    
    -- Hover Effect
    sliderButton.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(sliderBar, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        }):Play()
        game:GetService("TweenService"):Create(label, TweenInfo.new(0.2), {
            TextColor3 = Color3.fromRGB(158, 185, 255)
        }):Play()
    end)
    
    sliderButton.MouseLeave:Connect(function()
        if not sliding then
            game:GetService("TweenService"):Create(sliderBar, TweenInfo.new(0.2), {
                BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            }):Play()
            game:GetService("TweenService"):Create(label, TweenInfo.new(0.2), {
                TextColor3 = Color3.fromRGB(255, 255, 255)
            }):Play()
        end
    end)
    
    return sliderContainer
end

function library:CreateKeybind(text, parent, flag, default, callback)
    local keybindContainer = Instance.new("Frame")
    keybindContainer.Name = text
    keybindContainer.Parent = parent
    keybindContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    keybindContainer.BorderColor3 = Color3.fromRGB(40, 40, 40)
    keybindContainer.Size = UDim2.new(0.95, 0, 0, 25)
    
    -- Add container corner
    local UICorner_Container = Instance.new("UICorner")
    UICorner_Container.CornerRadius = UDim.new(0, 2)
    UICorner_Container.Parent = keybindContainer
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Parent = keybindContainer
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 8, 0, 0)
    label.Size = UDim2.new(0.7, -8, 1, 0)
    label.Font = Enum.Font.SourceSans
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local bindButton = Instance.new("TextButton")
    bindButton.Name = "BindButton"
    bindButton.Parent = keybindContainer
    bindButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    bindButton.BorderSizePixel = 0
    bindButton.Position = UDim2.new(0.7, 0, 0.5, -8)
    bindButton.Size = UDim2.new(0.3, -12, 0, 16)
    bindButton.Font = Enum.Font.SourceSans
    bindButton.Text = default and (default.Name or tostring(default)) or "None"
    bindButton.TextColor3 = Color3.fromRGB(158, 185, 255)
    bindButton.TextSize = 13
    bindButton.AutoButtonColor = false
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 2)
    UICorner.Parent = bindButton
    
    -- Add subtle stroke
    local UIStroke = Instance.new("UIStroke")
    UIStroke.Color = Color3.fromRGB(40, 40, 40)
    UIStroke.Thickness = 1
    UIStroke.Parent = bindButton
    
    local binding = false
    library.flags[flag] = default
    
    bindButton.MouseButton1Click:Connect(function()
        binding = true
        bindButton.Text = "..."
        bindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        
        -- Animate stroke color
        game:GetService("TweenService"):Create(UIStroke, TweenInfo.new(0.2), {
            Color = Color3.fromRGB(158, 185, 255)
        }):Play()
    end)
    
    UserInputService.InputBegan:Connect(function(input)
        if binding then
            if input.UserInputType == Enum.UserInputType.Keyboard then
                library.flags[flag] = input.KeyCode
                bindButton.Text = input.KeyCode.Name
                bindButton.TextColor3 = Color3.fromRGB(158, 185, 255)
                binding = false
                callback(input.KeyCode)
            elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
                library.flags[flag] = input.UserInputType
                bindButton.Text = "MB1"
                bindButton.TextColor3 = Color3.fromRGB(158, 185, 255)
                binding = false
                callback(input.UserInputType)
            elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
                library.flags[flag] = input.UserInputType
                bindButton.Text = "MB2"
                bindButton.TextColor3 = Color3.fromRGB(158, 185, 255)
                binding = false
                callback(input.UserInputType)
            end
            
            -- Reset stroke color
            game:GetService("TweenService"):Create(UIStroke, TweenInfo.new(0.2), {
                Color = Color3.fromRGB(40, 40, 40)
            }):Play()
        else
            if input.KeyCode == library.flags[flag] or input.UserInputType == library.flags[flag] then
                callback(library.flags[flag])
            end
        end
    end)
    
    -- Hover Effects
    bindButton.MouseEnter:Connect(function()
        if not binding then
            game:GetService("TweenService"):Create(bindButton, TweenInfo.new(0.2), {
                BackgroundColor3 = Color3.fromRGB(40, 40, 40),
                Size = UDim2.new(0.3, -10, 0, 18)
            }):Play()
            game:GetService("TweenService"):Create(UIStroke, TweenInfo.new(0.2), {
                Color = Color3.fromRGB(158, 185, 255)
            }):Play()
        end
    end)
    
    bindButton.MouseLeave:Connect(function()
        if not binding then
            game:GetService("TweenService"):Create(bindButton, TweenInfo.new(0.2), {
                BackgroundColor3 = Color3.fromRGB(30, 30, 30),
                Size = UDim2.new(0.3, -12, 0, 16)
            }):Play()
            game:GetService("TweenService"):Create(UIStroke, TweenInfo.new(0.2), {
                Color = Color3.fromRGB(40, 40, 40)
            }):Play()
        end
    end)
    
    return keybindContainer
end

function library:CreateDropdown(text, parent, flag, options, default, callback)
    local dropdownContainer = Instance.new("Frame")
    dropdownContainer.Name = text
    dropdownContainer.Parent = parent
    dropdownContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    dropdownContainer.BorderColor3 = Color3.fromRGB(40, 40, 40)
    dropdownContainer.Size = UDim2.new(0.95, 0, 0, 25)
    
    -- Add container corner
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 2)
    UICorner.Parent = dropdownContainer
    
    -- Add subtle stroke
    local UIStroke = Instance.new("UIStroke")
    UIStroke.Color = Color3.fromRGB(40, 40, 40)
    UIStroke.Thickness = 1
    UIStroke.Parent = dropdownContainer
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Parent = dropdownContainer
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 8, 0, 0)
    label.Size = UDim2.new(0.6, -8, 1, 0)
    label.Font = Enum.Font.SourceSans
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local selectedLabel = Instance.new("TextLabel")
    selectedLabel.Name = "Selected"
    selectedLabel.Parent = dropdownContainer
    selectedLabel.BackgroundTransparency = 1
    selectedLabel.Position = UDim2.new(0.6, 0, 0, 0)
    selectedLabel.Size = UDim2.new(0.35, 0, 1, 0)
    selectedLabel.Font = Enum.Font.SourceSans
    selectedLabel.Text = default or options[1]
    selectedLabel.TextColor3 = Color3.fromRGB(158, 185, 255)
    selectedLabel.TextSize = 14
    selectedLabel.TextXAlignment = Enum.TextXAlignment.Right
    
    local arrow = Instance.new("TextLabel")
    arrow.Name = "Arrow"
    arrow.Parent = dropdownContainer
    arrow.BackgroundTransparency = 1
    arrow.Position = UDim2.new(0.95, 0, 0, 0)
    arrow.Size = UDim2.new(0.05, 0, 1, 0)
    arrow.Font = Enum.Font.SourceSansBold
    arrow.Text = "+"
    arrow.TextColor3 = Color3.fromRGB(158, 185, 255)
    arrow.TextSize = 14
    arrow.Rotation = 0
    
    local optionsFrame = Instance.new("Frame")
    optionsFrame.Name = "Options"
    optionsFrame.Parent = dropdownContainer
    optionsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    optionsFrame.BorderSizePixel = 0
    optionsFrame.Position = UDim2.new(0, 0, 1, 1)
    optionsFrame.Size = UDim2.new(1, 0, 0, 0) -- Start with 0 height
    optionsFrame.Visible = false
    optionsFrame.ZIndex = 50
    optionsFrame.ClipsDescendants = true
    
    local UICorner_Options = Instance.new("UICorner")
    UICorner_Options.CornerRadius = UDim.new(0, 2)
    UICorner_Options.Parent = optionsFrame
    
    local UIStroke_Options = Instance.new("UIStroke")
    UIStroke_Options.Color = Color3.fromRGB(40, 40, 40)
    UIStroke_Options.Thickness = 1
    UIStroke_Options.Parent = optionsFrame
    
    local optionsList = Instance.new("ScrollingFrame")
    optionsList.Name = "OptionsList"
    optionsList.Parent = optionsFrame
    optionsList.BackgroundTransparency = 1
    optionsList.Size = UDim2.new(1, 0, 1, 0)
    optionsList.CanvasSize = UDim2.new(0, 0, 0, #options * 25)
    optionsList.ScrollBarThickness = 2
    optionsList.ScrollBarImageColor3 = Color3.fromRGB(158, 185, 255)
    optionsList.ZIndex = 50
    
    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Parent = optionsList
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 0)
    
    -- Create option buttons
    for i, option in ipairs(options) do
        local optionButton = Instance.new("TextButton")
        optionButton.Name = option
        optionButton.Parent = optionsList
        optionButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        optionButton.BackgroundTransparency = 1
        optionButton.Size = UDim2.new(1, 0, 0, 25)
        optionButton.Font = Enum.Font.SourceSans
        optionButton.Text = "  " .. option
        optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        optionButton.TextSize = 14
        optionButton.TextXAlignment = Enum.TextXAlignment.Left
        optionButton.ZIndex = 50
        
        optionButton.MouseEnter:Connect(function()
            game:GetService("TweenService"):Create(optionButton, TweenInfo.new(0.2), {
                BackgroundTransparency = 0,
                BackgroundColor3 = Color3.fromRGB(40, 40, 40),
                TextColor3 = Color3.fromRGB(158, 185, 255)
            }):Play()
        end)
        
        optionButton.MouseLeave:Connect(function()
            game:GetService("TweenService"):Create(optionButton, TweenInfo.new(0.2), {
                BackgroundTransparency = 1,
                TextColor3 = Color3.fromRGB(255, 255, 255)
            }):Play()
        end)
        
        optionButton.MouseButton1Click:Connect(function()
            selectedLabel.Text = option
            library.flags[flag] = option
            
            -- Animate closing
            game:GetService("TweenService"):Create(arrow, TweenInfo.new(0.2), {
                Rotation = 0,
                TextColor3 = Color3.fromRGB(158, 185, 255)
            }):Play()
            
            game:GetService("TweenService"):Create(optionsFrame, TweenInfo.new(0.2), {
                Size = UDim2.new(1, 0, 0, 0)
            }):Play()
            
            wait(0.2)
            optionsFrame.Visible = false
            callback(option)
        end)
    end
    
    -- Dropdown toggle
    local open = false
    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Name = "DropdownButton"
    dropdownButton.Parent = dropdownContainer
    dropdownButton.BackgroundTransparency = 1
    dropdownButton.Size = UDim2.new(1, 0, 1, 0)
    dropdownButton.Text = ""
    
    dropdownButton.MouseButton1Click:Connect(function()
        open = not open
        
        if open then
            local dropdownBottom = dropdownContainer.AbsolutePosition.Y + dropdownContainer.AbsoluteSize.Y
            local screenHeight = workspace.CurrentCamera.ViewportSize.Y
            local optionsHeight = math.min(#options * 25, 150)
            
            -- Check if there's enough space below
            local spaceBelow = screenHeight - dropdownBottom
            local showAbove = spaceBelow < optionsHeight
            
            optionsFrame.Size = UDim2.new(1, 0, 0, 0)
            optionsFrame.Visible = true
            
            -- Position options frame above or below based on available space
            if showAbove then
                optionsFrame.Position = UDim2.new(0, 0, 0, -optionsHeight - 1)
                game:GetService("TweenService"):Create(optionsFrame, TweenInfo.new(0.2), {
                    Size = UDim2.new(1, 0, 0, optionsHeight)
                }):Play()
                
                -- Rotate arrow upward
                game:GetService("TweenService"):Create(arrow, TweenInfo.new(0.2), {
                    Rotation = -45,
                    TextColor3 = Color3.fromRGB(255, 255, 255)
                }):Play()
            else
                optionsFrame.Position = UDim2.new(0, 0, 1, 1)
                game:GetService("TweenService"):Create(optionsFrame, TweenInfo.new(0.2), {
                    Size = UDim2.new(1, 0, 0, optionsHeight)
                }):Play()
                
                -- Rotate arrow downward
                game:GetService("TweenService"):Create(arrow, TweenInfo.new(0.2), {
                    Rotation = 45,
                    TextColor3 = Color3.fromRGB(255, 255, 255)
                }):Play()
            end
        else
            -- Close animation
            game:GetService("TweenService"):Create(arrow, TweenInfo.new(0.2), {
                Rotation = 0,
                TextColor3 = Color3.fromRGB(158, 185, 255)
            }):Play()
            
            game:GetService("TweenService"):Create(optionsFrame, TweenInfo.new(0.2), {
                Size = UDim2.new(1, 0, 0, 0)
            }):Play()
            
            wait(0.2)
            optionsFrame.Visible = false
        end
    end)
    
    -- Set default value
    library.flags[flag] = default or options[1]
    callback(library.flags[flag])
    
    return dropdownContainer
end

function library:CreateColorPicker(text, parent, flag, default, callback)
    local colorPickerContainer = Instance.new("Frame")
    colorPickerContainer.Name = text
    colorPickerContainer.Parent = parent
    colorPickerContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    colorPickerContainer.BorderColor3 = Color3.fromRGB(40, 40, 40)
    colorPickerContainer.Size = UDim2.new(0.95, 0, 0, 25)
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 2)
    UICorner.Parent = colorPickerContainer
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Parent = colorPickerContainer
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 8, 0, 0)
    label.Size = UDim2.new(0.7, -8, 1, 0)
    label.Font = Enum.Font.SourceSans
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local colorDisplay = Instance.new("Frame")
    colorDisplay.Name = "ColorDisplay"
    colorDisplay.Parent = colorPickerContainer
    colorDisplay.BackgroundColor3 = default or Color3.fromRGB(255, 255, 255)
    colorDisplay.BorderSizePixel = 0
    colorDisplay.Position = UDim2.new(0.95, -40, 0.5, -8)
    colorDisplay.Size = UDim2.new(0, 35, 0, 16)
    
    local UICorner_2 = Instance.new("UICorner")
    UICorner_2.CornerRadius = UDim.new(0, 2)
    UICorner_2.Parent = colorDisplay
    
    -- Create color picker window in ScreenGui
    local pickerFrame = Instance.new("Frame")
    pickerFrame.Name = "PickerFrame"
    pickerFrame.Parent = Frame
    pickerFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    pickerFrame.BorderSizePixel = 0
    pickerFrame.Size = UDim2.new(0, 180, 0, 200)
    pickerFrame.Visible = false
    pickerFrame.ZIndex = 1000
    
    -- Add color gradient
    local colorGradient = Instance.new("ImageButton")
    colorGradient.Name = "ColorGradient"
    colorGradient.Parent = pickerFrame
    colorGradient.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    colorGradient.Position = UDim2.new(0, 10, 0, 10)
    colorGradient.Size = UDim2.new(1, -30, 0, 160)
    colorGradient.Image = "rbxassetid://4155801252"
    colorGradient.ZIndex = 1001
    
    -- Add hue slider
    local hueSlider = Instance.new("ImageButton")
    hueSlider.Name = "HueSlider"
    hueSlider.Parent = pickerFrame
    hueSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    hueSlider.BorderSizePixel = 0
    hueSlider.Position = UDim2.new(1, -20, 0, 10)
    hueSlider.Size = UDim2.new(0, 8, 0, 160)
    hueSlider.Image = "rbxassetid://3641079629"
    hueSlider.ZIndex = 1001
    
    -- Add the hue gradient
    local hueGradient = Instance.new("UIGradient")
    hueGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
        ColorSequenceKeypoint.new(0.167, Color3.fromRGB(255, 255, 0)),
        ColorSequenceKeypoint.new(0.333, Color3.fromRGB(0, 255, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 255)),
        ColorSequenceKeypoint.new(0.667, Color3.fromRGB(0, 0, 255)),
        ColorSequenceKeypoint.new(0.833, Color3.fromRGB(255, 0, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
    })
    hueGradient.Rotation = 90
    hueGradient.Parent = hueSlider
    
    -- Add cursors
    local colorCursor = Instance.new("Frame")
    colorCursor.Name = "ColorCursor"
    colorCursor.Parent = colorGradient
    colorCursor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    colorCursor.BorderSizePixel = 0
    colorCursor.Size = UDim2.new(0, 4, 0, 4)
    colorCursor.ZIndex = 102
    colorCursor.AnchorPoint = Vector2.new(0.5, 0.5)
    
    local hueCursor = Instance.new("Frame")
    hueCursor.Name = "HueCursor"
    hueCursor.Parent = hueSlider
    hueCursor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    hueCursor.BorderSizePixel = 0
    hueCursor.Size = UDim2.new(1.5, 0, 0, 2)
    hueCursor.ZIndex = 102
    hueCursor.AnchorPoint = Vector2.new(0.5, 0.5)
    
    -- Add corners
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = pickerFrame
    
    local UICorner_2 = Instance.new("UICorner")
    UICorner_2.CornerRadius = UDim.new(0, 4)
    UICorner_2.Parent = colorGradient
    
    local UICorner_3 = Instance.new("UICorner")
    UICorner_3.CornerRadius = UDim.new(0, 4)
    UICorner_3.Parent = hueSlider
    
    -- Add color text display
    local colorText = Instance.new("TextLabel")
    colorText.Name = "ColorText"
    colorText.Parent = pickerFrame
    colorText.BackgroundTransparency = 1
    colorText.Position = UDim2.new(0, 10, 0.85, 0)
    colorText.Size = UDim2.new(0.4, 0, 0, 20)
    colorText.Font = Enum.Font.SourceSans
    colorText.TextColor3 = Color3.fromRGB(255, 255, 255)
    colorText.TextSize = 14
    colorText.Text = "RGB:"
    colorText.ZIndex = 1001
    
    -- Add color input box
    local colorInput = Instance.new("TextBox")
    colorInput.Name = "ColorInput"
    colorInput.Parent = pickerFrame
    colorInput.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    colorInput.Position = UDim2.new(0.4, 0, 0.85, 0)
    colorInput.Size = UDim2.new(0.55, -10, 0, 20)
    colorInput.Font = Enum.Font.SourceSans
    colorInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    colorInput.TextSize = 14
    colorInput.PlaceholderText = "255, 255, 255"
    colorInput.Text = ""
    colorInput.ZIndex = 1001
    
    -- Add corner to input box
    local UICorner_Input = Instance.new("UICorner")
    UICorner_Input.CornerRadius = UDim.new(0, 4)
    UICorner_Input.Parent = colorInput
    
    -- Color picker functionality
    local picking = false
    local pickingHue = false
    
    local function updateColor(hue, sat, val)
        local color = Color3.fromHSV(hue, sat, val)
        colorDisplay.BackgroundColor3 = color
        colorGradient.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
        
        -- Update cursors
        colorCursor.Position = UDim2.new(sat, 0, 1 - val, 0)
        hueCursor.Position = UDim2.new(0.5, 0, hue, 0)
        
        -- Update color text
        colorInput.Text = math.floor(color.R * 255) .. ", " .. math.floor(color.G * 255) .. ", " .. math.floor(color.B * 255)
        
        library.flags[flag] = color
        callback(color)
    end
    
    -- Color selection logic
    local function getColorFromMousePosition(mousePos, frame)
        local relativeX = mousePos.X - frame.AbsolutePosition.X
        local relativeY = mousePos.Y - frame.AbsolutePosition.Y
        
        return math.clamp(relativeX / frame.AbsoluteSize.X, 0, 1),
               math.clamp(relativeY / frame.AbsoluteSize.Y, 0, 1)
    end

    colorGradient.MouseButton1Down:Connect(function()
        picking = true
        
        local mousePos = game:GetService("UserInputService"):GetMouseLocation()
        local sat, val = getColorFromMousePosition(mousePos, colorGradient)
        local hue = hueCursor.Position.Y.Scale
        
        updateColor(hue, sat, 1 - val)
    end)

    hueSlider.MouseButton1Down:Connect(function()
        pickingHue = true
        
        local mousePos = game:GetService("UserInputService"):GetMouseLocation()
        local viewportOffset = game:GetService("GuiService"):GetGuiInset()
        mousePos = mousePos - viewportOffset
        
        local framePos = hueSlider.AbsolutePosition
        local frameSize = hueSlider.AbsoluteSize
        
        local hue = math.clamp((mousePos.Y - framePos.Y) / frameSize.Y, 0, 1)
        local _, sat, val = Color3.toHSV(colorDisplay.BackgroundColor3)
        
        updateColor(hue, sat, val)
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            if picking then
                local mousePos = game:GetService("UserInputService"):GetMouseLocation()
                local sat, val = getColorFromMousePosition(mousePos, colorGradient)
                local hue = hueCursor.Position.Y.Scale
                
                updateColor(hue, sat, 1 - val)
            elseif pickingHue then
                local mousePos = game:GetService("UserInputService"):GetMouseLocation()
                local viewportOffset = game:GetService("GuiService"):GetGuiInset()
                mousePos = mousePos - viewportOffset
                
                local framePos = hueSlider.AbsolutePosition
                local frameSize = hueSlider.AbsoluteSize
                
                local hue = math.clamp((mousePos.Y - framePos.Y) / frameSize.Y, 0, 1)
                local _, sat, val = Color3.toHSV(colorDisplay.BackgroundColor3)
                
                updateColor(hue, sat, val)
            end
        end
    end)

    game:GetService("UserInputService").InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            picking = false
            pickingHue = false
        end
    end)
    
    -- Set initial color and cursor positions
    local function setInitialColor()
        local h, s, v = Color3.toHSV(default or Color3.fromRGB(255, 255, 255))
        updateColor(h, s, v)
    end

    setInitialColor()
    
    -- Add toggle button functionality
    local open = false
    local button = Instance.new("TextButton")
    button.Name = "Button"
    button.Parent = colorPickerContainer
    button.BackgroundTransparency = 1
    button.Size = UDim2.new(1, 0, 1, 0)
    button.Text = ""

    button.MouseButton1Click:Connect(function()
        open = not open
        if open then
            -- Position relative to the menu
            local menuPos = Frame.AbsolutePosition
            local buttonPos = colorDisplay.AbsolutePosition
            local xOffset = buttonPos.X - menuPos.X
            local yOffset = buttonPos.Y - menuPos.Y
            
            pickerFrame.Parent = Frame
            pickerFrame.Position = UDim2.new(0, xOffset + colorDisplay.AbsoluteSize.X + 5, 0, yOffset)
            pickerFrame.Visible = true
        else
            pickerFrame.Visible = false
        end
    end)
    
    -- Add color input functionality
    colorInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local r, g, b = colorInput.Text:match("(%d+),%s*(%d+),%s*(%d+)")
            if r and g and b then
                r, g, b = tonumber(r), tonumber(g), tonumber(b)
                if r and g and b and r <= 255 and g <= 255 and b <= 255 then
                    local color = Color3.fromRGB(r, g, b)
                    local h, s, v = Color3.toHSV(color)
                    updateColor(h, s, v)
                end
            end
        end
    end)
    
    return colorPickerContainer
end

function library:CreateLabel(text, parent)
    local labelContainer = Instance.new("Frame")
    labelContainer.Name = text .. "Container"
    labelContainer.Parent = parent
    labelContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    labelContainer.BorderColor3 = Color3.fromRGB(40, 40, 40)
    labelContainer.Size = UDim2.new(0.95, 0, 0, 25)
    
    -- Add container corner
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 2)
    UICorner.Parent = labelContainer
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Parent = labelContainer
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 8, 0, 0)
    label.Size = UDim2.new(1, -16, 1, 0)
    label.Font = Enum.Font.SourceSans
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Add hover effect
    labelContainer.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(label, TweenInfo.new(0.2), {
            TextColor3 = Color3.fromRGB(158, 185, 255)
        }):Play()
    end)
    
    labelContainer.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(label, TweenInfo.new(0.2), {
            TextColor3 = Color3.fromRGB(255, 255, 255)
        }):Play()
    end)
    
    return labelContainer
end

function library:MakeTab(options)
    local tabName = options.Name
    
    -- Create tab button
    local tabButton = Instance.new("TextButton")
    tabButton.Name = tabName .. "Tab"
    tabButton.Parent = Frame_3
    tabButton.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
    tabButton.BackgroundTransparency = 1
    tabButton.BorderSizePixel = 0
    tabButton.Size = UDim2.new(0, 42, 0, 17)
    tabButton.Font = Enum.Font.SourceSans
    tabButton.Text = tabName
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.TextSize = 14
    
    -- Position the tab button
    local tabCount = #library.tabs
    tabButton.Position = UDim2.new(0.15 + (tabCount * 0.1), 0, 0, 0)
    
    -- Create tab frame
    local tabFrame = Instance.new("Frame")
    tabFrame.Name = tabName .. "Frame"
    tabFrame.Parent = Frame
    tabFrame.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
    tabFrame.BorderSizePixel = 0
    tabFrame.Position = UDim2.new(0.0126849897, 0, 0.0885245875, 0)
    tabFrame.Size = UDim2.new(0.975, 0, 0.85, 0)
    tabFrame.Visible = false
    
    -- Create left and right frames
    local leftFrame = Instance.new("Frame")
    leftFrame.Name = "LeftFrame"
    leftFrame.Parent = tabFrame
    leftFrame.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
    leftFrame.BorderSizePixel = 0
    leftFrame.Position = UDim2.new(0, 0, 0, 0)
    leftFrame.Size = UDim2.new(0.49, 0, 1, 0)
    
    local rightFrame = Instance.new("Frame")
    rightFrame.Name = "RightFrame"
    rightFrame.Parent = tabFrame
    rightFrame.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
    rightFrame.BorderSizePixel = 0
    rightFrame.Position = UDim2.new(0.51, 0, 0, 0)
    rightFrame.Size = UDim2.new(0.49, 0, 1, 0)
    
    -- Store tab info
    table.insert(library.tabs, tabButton)
    library.tabContainers[tabName] = tabFrame
    
    -- Tab switching logic
    tabButton.MouseButton1Click:Connect(function()
        -- Hide all tab containers
        for _, container in pairs(library.tabContainers) do
            container.Visible = false
        end
        
        -- Reset all tab button colors
        for _, tab in ipairs(library.tabs) do
            game:GetService("TweenService"):Create(tab, TweenInfo.new(0.2), {
                TextColor3 = Color3.fromRGB(255, 255, 255)
            }):Play()
        end
        
        -- Show selected tab and highlight button
        tabFrame.Visible = true
        game:GetService("TweenService"):Create(tabButton, TweenInfo.new(0.2), {
            TextColor3 = Color3.fromRGB(158, 185, 255)
        }):Play()
    end)
    
    -- Show first tab by default
    if #library.tabs == 1 then
        tabFrame.Visible = true
        tabButton.TextColor3 = Color3.fromRGB(158, 185, 255)
    end
    
    return {
        LeftFrame = leftFrame,
        RightFrame = rightFrame
    }
end


-- Create settings tab frame
local settingsTabFrame = Instance.new("Frame")
settingsTabFrame.Name = "SettingsTabFrame"
settingsTabFrame.Parent = Frame
settingsTabFrame.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
settingsTabFrame.BorderSizePixel = 0
settingsTabFrame.Position = UDim2.new(0.0126849897, 0, 0.0885245875, 0)
settingsTabFrame.Size = UDim2.new(0.975, 0, 0.85, 0)
settingsTabFrame.Visible = false

-- Create left frame for settings
local settingsLeftFrame = Instance.new("Frame")
settingsLeftFrame.Name = "LeftFrame"
settingsLeftFrame.Parent = settingsTabFrame
settingsLeftFrame.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
settingsLeftFrame.BorderSizePixel = 0
settingsLeftFrame.Position = UDim2.new(0, 0, 0, 0)
settingsLeftFrame.Size = UDim2.new(0.49, 0, 1, 0)

-- Create settings section
local settingsSection = library:CreateSection("Menu Settings", settingsLeftFrame)

-- Create menu keybind
local menuBind = library:CreateKeybind("Menu Toggle", settingsSection, "menu_key", Enum.KeyCode.RightShift, function(key)
    library.settings.menuKey = key
end)

-- Create right frame for settings
local settingsRightFrame = Instance.new("Frame")
settingsRightFrame.Name = "RightFrame"
settingsRightFrame.Parent = settingsTabFrame
settingsRightFrame.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
settingsRightFrame.BorderSizePixel = 0
settingsRightFrame.Position = UDim2.new(0.51, 0, 0, 0)
settingsRightFrame.Size = UDim2.new(0.49, 0, 1, 0)

-- Create credits section
local creditsSection = library:CreateSection("Credits", settingsRightFrame)

-- Add credits labels
library:CreateLabel("Credits", creditsSection)
library:CreateLabel("Owner: ZNX", creditsSection)
library:CreateLabel("Developer: ZNX", creditsSection)
library:CreateLabel("UI Developer: ZNX", creditsSection)
library:CreateLabel("", creditsSection)
library:CreateLabel("owner's discord: notznxx", creditsSection)
library:CreateLabel("discord.gg/emergencyhamburg", creditsSection)



-- Settings button click handler
Settings.MouseButton1Click:Connect(function()
    -- Hide all tabs
    for _, container in pairs(library.tabContainers) do
        container.Visible = false
    end
    
    -- Reset all tab colors
    for _, tab in ipairs(library.tabs) do
        tab.TextColor3 = Color3.fromRGB(255, 255, 255)
    end
    
    -- Show settings tab
    settingsTabFrame.Visible = true
    Settings.TextColor3 = Color3.fromRGB(158, 185, 255)
end)

-- Update tab button click handlers to hide settings tab
for _, tab in ipairs(library.tabs) do
    tab.MouseButton1Click:Connect(function()
        settingsTabFrame.Visible = false
        Settings.TextColor3 = Color3.fromRGB(255, 255, 255)
    end)
end

-- Add menu accent color picker
local menuColor = library:CreateColorPicker("Menu Color", settingsSection, "menu_accent", Color3.fromRGB(158, 185, 255), function(color)
    bar.BackgroundColor3 = color
    bar_2.BackgroundColor3 = color
    bar_4.BackgroundColor3 = color
    
    for _, tab in ipairs(library.tabs) do
        if tab.TextColor3 == library.settings.accentColor then
            tab.TextColor3 = color
        end
    end
    
    library.settings.accentColor = color
end)

return library
